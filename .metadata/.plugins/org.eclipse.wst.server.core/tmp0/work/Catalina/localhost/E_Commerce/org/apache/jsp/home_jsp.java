/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.8
 * Generated at: 2025-01-28 13:18:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.ecommerce.model.*;
import java.util.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_packages.add("com.ecommerce.model");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"ISO-8859-1\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Home</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./styles/home.css?v=1\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar\">\r\n");
      out.write("        <a href=\"home.jsp\" class=\"logo\">\r\n");
      out.write("            <img src=\"https://img.icons8.com/?size=100&id=3UFq9axr5bPe&format=png&color=000000\" alt=\"Logo\">\r\n");
      out.write("        </a>\r\n");
      out.write("        <div class=\"search-bar\">\r\n");
      out.write("            <input type=\"text\" id=\"searchInput\" placeholder=\"Search products...\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"auth-buttons\">\r\n");
      out.write("            <a href=\"login.jsp\" class=\"login\">Login</a>\r\n");
      out.write("            <a href=\"signup.jsp\" class=\"signup\">Sign Up</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"hero-slider\">\r\n");
      out.write("        <div class=\"slide\">\r\n");
      out.write("            <img src=\"./homeImages/sale.jpg\" alt=\"Sale\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"slide\">\r\n");
      out.write("            <img src=\"./homeImages/online.jpg\" alt=\"New Arrivals\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"slide\">\r\n");
      out.write("            <img src=\"./homeImages/onlineshopping.jpg\" alt=\"Special Offers\">\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <section class=\"products\">\r\n");
      out.write("        <h2 class=\"section-title\">Shop By Category</h2>\r\n");
      out.write("        <div class=\"product-grid\" id=\"productGrid\">\r\n");
      out.write("            ");

                ArrayList<Products> productList = (ArrayList<Products>) session.getAttribute("products");
                
                if (productList == null || productList.isEmpty()) {
            
      out.write("\r\n");
      out.write("                <div class=\"no-products\">\r\n");
      out.write("                    <h3>No products available at the moment.</h3>\r\n");
      out.write("                    <p>Check back later for exciting new products!</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            ");

                } else {
                    for (Products product : productList) {
            
      out.write("\r\n");
      out.write("                <div class=\"product-card\" data-name=\"");
      out.print( product.getName().toLowerCase() );
      out.write("\">\r\n");
      out.write("                    <a href=\"ProductItemsServlet?productId=");
      out.print( product.getProductId() );
      out.write("\">\r\n");
      out.write("                        <img src=\"");
      out.print( product.getImagePath() );
      out.write("\" alt=\"");
      out.print( product.getName() );
      out.write("\">\r\n");
      out.write("                        <h3>");
      out.print( product.getName() );
      out.write("</h3>\r\n");
      out.write("                        <p class=\"discount\">");
      out.print( product.getDiscount() );
      out.write(" OFF</p>\r\n");
      out.write("                        <h4>Shop Now</h4>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </div>\r\n");
      out.write("            ");

                    }
                }
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <footer>\r\n");
      out.write("        <div class=\"footer-content\">\r\n");
      out.write("            <div class=\"footer-section\">\r\n");
      out.write("                <h3>About Us</h3>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"#\">Our Story</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Careers</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Press</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"footer-section\">\r\n");
      out.write("                <h3>Customer Service</h3>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"#\">Contact Us</a></li>\r\n");
      out.write("                    <li><a href=\"#\">FAQs</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Shipping & Returns</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"footer-section\">\r\n");
      out.write("                <h3>Connect With Us</h3>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"#\"><i class=\"fab fa-facebook\"></i> Facebook</a></li>\r\n");
      out.write("                    <li><a href=\"#\"><i class=\"fab fa-instagram\"></i> Instagram</a></li>\r\n");
      out.write("                    <li><a href=\"#\"><i class=\"fab fa-twitter\"></i> Twitter</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"footer-bottom\">\r\n");
      out.write("            <p>&copy; 2024 E-Commerce. All rights reserved.</p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        document.addEventListener('DOMContentLoaded', () => {\r\n");
      out.write("            const searchInput = document.getElementById('searchInput');\r\n");
      out.write("            const productGrid = document.getElementById('productGrid');\r\n");
      out.write("            const productCards = productGrid.querySelectorAll('.product-card');\r\n");
      out.write("\r\n");
      out.write("            searchInput.addEventListener('input', (e) => {\r\n");
      out.write("                const query = e.target.value.toLowerCase();\r\n");
      out.write("\r\n");
      out.write("                productCards.forEach((card) => {\r\n");
      out.write("                    const productName = card.getAttribute('data-name');\r\n");
      out.write("                    if (productName.includes(query)) {\r\n");
      out.write("                        card.style.display = 'block';\r\n");
      out.write("                    } else {\r\n");
      out.write("                        card.style.display = 'none';\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // Hero slider functionality\r\n");
      out.write("            const slides = document.querySelectorAll('.slide');\r\n");
      out.write("            let currentSlide = 0;\r\n");
      out.write("\r\n");
      out.write("            function showSlide(index) {\r\n");
      out.write("                slides[currentSlide].style.opacity = 0;\r\n");
      out.write("                slides[index].style.opacity = 1;\r\n");
      out.write("                currentSlide = index;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            function nextSlide() {\r\n");
      out.write("                let next = (currentSlide + 1) % slides.length;\r\n");
      out.write("                showSlide(next);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            setInterval(nextSlide, 5000); \r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
